{{#ifDirective this "entity" }}
{{#each fields}}{{#toMany this }}{{/toMany}}{{/each}}
module.exports = {
  up: (queryInterface, Sequelize) => {
    return Promise.all([
      queryInterface.createTable('{{#if tableName}}{{tableName}}{{else}}{{ toCamelCase ../name }}{{/if}}', {
        id: {
          allowNull: false,
          autoIncrement: true,
          primaryKey: true,
          type: Sequelize.INTEGER
        },
        {{#each fields}}
        {{#ifDirective this "UUID"}}
        {{ ../name }}: {
          type: Sequelize.UUID,
          defaultValue: Sequelize.UUIDV4,
          allowNull: false,
        },
        {{/ifDirective}}
        {{#ifDirective this "Column"}}
        {{ ../name }}: {
          type: Sequelize.{{ toMysqlType ../this }}{{#if defaultValue}},
          defaultValue: {{#ifCond ../type "==" "String" }}'{{defaultValue}}'{{else}}{{defaultValue}}{{/ifCond}},
          allowNull: false{{/if}}
        },
        {{/ifDirective}}
        {{#ifDirective this "BelongsTo"}}
        {{#if foreignKey}}{{foreignKey}}{{else}}{{ ../name }}Id{{/if}}: {
          type: Sequelize.INTEGER
        },
        {{/ifDirective}}
        {{/each}}
        createdAt: {
          allowNull: false,
          type: Sequelize.DATE
        },
        updatedAt: {
          allowNull: false,
          type: Sequelize.DATE
        }
      }),
    {{#each fields}}
      {{#ifDirective this "BelongsToMany"}}
        {{#ifToMany ../this }}
      queryInterface.createTable('{{ through }}', {
        {{ foreignKey }}: {
          type: Sequelize.INTEGER,
          allowNull: false,
        },
        {{ otherKey }}: {
          type: Sequelize.INTEGER,
          allowNull: false,
        },
      }),
        {{/ifToMany}}
      {{/ifDirective}}
    {{/each}}
    ]);
  },
  down: (queryInterface, Sequelize) => {
    return Promise.all([
      queryInterface.dropTable('{{#if tableName}}{{tableName}}{{else}}{{ toCamelCase ../name }}{{/if}}'),
      {{#each fields}}
        {{#ifDirective this "BelongsToMany"}}
          {{#ifToMany ../this }}
      queryInterface.dropTable('{{toLowerCase through }}'),
          {{/ifToMany}}
        {{/ifDirective}}
      {{/each}}
    ]);
  }
};

{{/ifDirective}}
